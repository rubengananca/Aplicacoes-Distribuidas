# Generated by Django 5.0 on 2024-01-16 17:52

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Utilizador",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("nome", models.CharField(max_length=200)),
                ("idade", models.IntegerField(default=18)),
                (
                    "sexo",
                    models.CharField(
                        choices=[("M", "Masculino"), ("F", "Feminino")], max_length=10
                    ),
                ),
                ("email", models.EmailField(max_length=50, unique=True)),
                (
                    "numSaude",
                    models.CharField(
                        max_length=9,
                        unique=True,
                        validators=[
                            django.core.validators.MinLengthValidator(limit_value=9),
                            django.core.validators.MaxLengthValidator(limit_value=9),
                        ],
                    ),
                ),
                (
                    "tipo",
                    models.CharField(
                        choices=[("M", "Médico"), ("U", "Utente"), ("F", "Familiar")],
                        max_length=1,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        related_name="utilizador_groups", to="auth.group"
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        related_name="utilizador_user_permissions", to="auth.permission"
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Consulta",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("data", models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name="Medicamento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome", models.CharField(max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Medico",
            fields=[
                (
                    "utilizador_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "especialidade",
                    models.CharField(
                        choices=[
                            ("C", "Cardiologia"),
                            ("P", "Pediatria"),
                            ("Ps", "Psiquiatria"),
                            ("CG", "Clínica Geral"),
                            ("N", "Neurologia"),
                        ],
                        max_length=2,
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            bases=("entidades.utilizador",),
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Utente",
            fields=[
                (
                    "utilizador_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            bases=("entidades.utilizador",),
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Exame",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tipo_exames",
                    models.CharField(
                        choices=[
                            ("E", "ECG"),
                            ("R", "RaiosX"),
                            ("H", "Hemograma"),
                            ("M", "Ressonância Magnética"),
                            ("C", "Ecografia"),
                            ("O", "Outros"),
                        ],
                        max_length=1,
                    ),
                ),
                ("data", models.DateField(default=django.utils.timezone.now)),
                (
                    "consulta",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="entidades.consulta",
                    ),
                ),
                (
                    "utente",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="entidades.utente",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="consulta",
            name="exames",
            field=models.ManyToManyField(
                blank=True,
                null=True,
                related_name="exames_prescritos",
                to="entidades.exame",
            ),
        ),
        migrations.CreateModel(
            name="Parametros",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("peso", models.DecimalField(decimal_places=2, max_digits=5)),
                ("colesterol", models.DecimalField(decimal_places=2, max_digits=5)),
                ("bpm", models.DecimalField(decimal_places=2, max_digits=5)),
                ("pressao", models.DecimalField(decimal_places=2, max_digits=5)),
                ("altura", models.DecimalField(decimal_places=2, max_digits=5)),
                ("temperatura", models.DecimalField(decimal_places=2, max_digits=5)),
                ("data", models.DateField(default=django.utils.timezone.now)),
                (
                    "consulta",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="parametros_consulta",
                        to="entidades.consulta",
                    ),
                ),
                (
                    "utente",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="entidades.utente",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="consulta",
            name="parametros",
            field=models.ManyToManyField(
                blank=True,
                null=True,
                related_name="parametros_prescritos",
                to="entidades.parametros",
            ),
        ),
        migrations.CreateModel(
            name="Prescricao",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "data_prescricao",
                    models.DateField(default=django.utils.timezone.now),
                ),
                ("data_termino", models.DateField()),
                (
                    "tomas",
                    models.CharField(
                        choices=[
                            ("U", "Uma vez ao dia"),
                            ("D", "Duas vezes ao dia"),
                            ("T", "Três vezes ao dia"),
                            ("Q", "Quatro vezes ao dia"),
                            ("O", "Outros"),
                        ],
                        max_length=1,
                    ),
                ),
                (
                    "consulta",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="entidades.consulta",
                    ),
                ),
                (
                    "medicamento",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="entidades.medicamento",
                    ),
                ),
                (
                    "utente",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="entidades.utente",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="consulta",
            name="prescricoes",
            field=models.ManyToManyField(
                blank=True,
                null=True,
                related_name="consultas_prescritas",
                to="entidades.prescricao",
            ),
        ),
        migrations.AddField(
            model_name="consulta",
            name="medico",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="entidades.medico"
            ),
        ),
        migrations.CreateModel(
            name="Familiar",
            fields=[
                (
                    "utilizador_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "relacao",
                    models.CharField(
                        choices=[
                            ("I", "Irmã/Irmão"),
                            ("P", "Pai"),
                            ("M", "Mãe"),
                            ("O", "Outro"),
                        ],
                        max_length=2,
                    ),
                ),
                (
                    "id_associado",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="familiares",
                        to="entidades.utente",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            bases=("entidades.utilizador",),
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name="consulta",
            name="utente",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="entidades.utente"
            ),
        ),
    ]
